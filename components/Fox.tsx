/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.15 fox.gltf -t 
Author: victory_mirosya (https://sketchfab.com/victory_mirosya)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/fox-f372c04de44640fbb6a4f9e4e5845c78
Title: Fox
*/

import * as THREE from 'three'
import React, { useEffect, useRef } from 'react'
import { useGLTF, useAnimations } from '@react-three/drei'
import { GLTF } from 'three-stdlib'
import { useFrame } from '@react-three/fiber'

type GLTFResult = GLTF & {
  nodes: {
    Object_7: THREE.SkinnedMesh
    Object_8: THREE.SkinnedMesh
    Object_9: THREE.SkinnedMesh
    Object_10: THREE.SkinnedMesh
    Object_11: THREE.SkinnedMesh
    GLTF_created_0_rootJoint: THREE.Bone
  }
  materials: {
    PaletteMaterial001: THREE.MeshStandardMaterial
  }
}

type ActionName = 'hit' | 'idle' | 'walk' | 'walk.left'
type GLTFActions = Record<ActionName, THREE.AnimationAction>

type ContextType = Record<string, React.ForwardRefExoticComponent<JSX.IntrinsicElements['skinnedMesh'] | JSX.IntrinsicElements['bone']>>

type foxprops={
  dogRun:boolean,
  scale:number
  position:[number,number,number],
  rotation:[number,number,number],
}

export function Fox({dogRun,...props}) {



  const group = useRef<THREE.Group>()
  const { nodes, materials, animations } = useGLTF('/fox.gltf') as GLTFResult
  // @ts-ignore
  const { actions } = useAnimations<GLTFActions>(animations, group)

useEffect(()=>{
if(dogRun){
  actions["walk"].stop()
  actions["hit"].play() 
   actions["hit"].setEffectiveTimeScale(2);
} else{
  actions["hit"].stop() 
   actions["walk"].play()
}

},[actions,dogRun])




  return (
    <group ref={group} {...props} dispose={null}  >
      <group name="Sketchfab_Scene" >
        <primitive object={nodes.GLTF_created_0_rootJoint} />
        <skinnedMesh name="Object_7" geometry={nodes.Object_7.geometry} material={materials.PaletteMaterial001} skeleton={nodes.Object_7.skeleton} />
        <skinnedMesh name="Object_8" geometry={nodes.Object_8.geometry} material={materials.PaletteMaterial001} skeleton={nodes.Object_8.skeleton} />
        <skinnedMesh name="Object_9" geometry={nodes.Object_9.geometry} material={materials.PaletteMaterial001} skeleton={nodes.Object_9.skeleton} />
        <skinnedMesh name="Object_10" geometry={nodes.Object_10.geometry} material={materials.PaletteMaterial001} skeleton={nodes.Object_10.skeleton} />
        <skinnedMesh name="Object_11" geometry={nodes.Object_11.geometry} material={materials.PaletteMaterial001} skeleton={nodes.Object_11.skeleton} />
      </group>
    </group>
  )
}

useGLTF.preload('/fox.gltf')
